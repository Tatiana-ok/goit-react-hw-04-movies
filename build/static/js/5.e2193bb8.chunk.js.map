{"version":3,"sources":["components/SearchBar/SearchBar.module.css","components/MovieList/MovieList.module.css","components/SearchBar/SearchBar.js","components/MovieList/MovieList.js","components/MoviesPage/MoviesPage.js"],"names":["module","exports","SearchBar","state","search","onChange","e","setState","currentTarget","value","onSubmit","preventDefault","props","this","className","s","input","type","autoComplete","autoFocus","placeholder","Component","MovieList","movies","location","moviesPageContainer","map","movie","to","pathname","id","title","defaultProps","withRouter","API_KEY","MoviesPage","error","loading","handleChangeQuery","query","history","push","a","queryString","parse","Axios","get","response","data","results","message","prevProps","prevState","prevQuery","nextQuery","length","toast","from","autoClose"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,MAAQ,2B,mBCA1BD,EAAOC,QAAU,CAAC,oBAAsB,yC,4JCqCzBC,E,4MAjCXC,MAAQ,CACJC,OAAQ,I,EAGZC,SAAW,SAACC,GACR,EAAKC,SAAS,CAACH,OAAQE,EAAEE,cAAcC,S,EAG3CC,SAAW,SAACJ,GACRA,EAAEK,iBACF,EAAKC,MAAMF,SAAS,EAAKP,MAAMC,S,4CAGnC,WACI,OACI,mCACI,uBAAMM,SAAUG,KAAKH,SAArB,UACI,uBAAOI,UAAWC,IAAEC,MACpBC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTV,MAAOI,KAAKV,MAAMC,OAClBC,SAAUQ,KAAKR,SACfe,YAAY,kBAEZ,wBAAQH,KAAK,SAAb,SACI,qD,GA3BAI,a,+BCClBC,EAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACxB,OACI,mCACI,oBAAIV,UAAWC,IAAEU,oBAAjB,SACKF,EAAOG,KAAI,SAAAC,GAAK,OACb,6BACI,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAMG,IAAM3B,MAAOqB,GAApD,SACKG,EAAMI,SAFNJ,EAAMG,YAYnCR,EAAUU,aAAe,CACrBD,MAAO,GACPD,GAAI,EACJN,SAAU,MAUCS,kBAAWX,G,yBC3BpBY,EAAU,mCAEVC,E,4MACFhC,MAAQ,CACJC,OAAQ,GACRmB,OAAQ,GACRa,MAAO,KACPC,SAAS,G,EAiCbC,kBAAoB,SAAAC,GAChB,EAAKhC,SAAS,CAAEH,OAAQmC,IACxB,EAAK3B,MAAM4B,QAAQC,KAAnB,2BACO,EAAK7B,MAAMY,UADlB,IAEIpB,OAAO,SAAD,OAAWmC,O,8FAlCzB,gCAAAG,EAAA,oEAE0BC,IAAYC,MAAM/B,KAAKD,MAAMY,SAASpB,UAAhDmC,EAFhB,EAEgBA,OAFhB,gCAImCM,IAAMC,IAAN,6CAAgDP,EAAhD,oBAAiEL,EAAjE,oBAJnC,OAIkBa,EAJlB,OAKYlC,KAAKN,SAAS,CAAEgB,OAAQwB,EAASC,KAAKC,UALlD,uDASQpC,KAAKN,SAAS,CAAE6B,MAAO,KAAMc,UATrC,yD,6HAaA,WAAyBC,EAAWC,GAApC,uBAAAV,EAAA,oEAEqCC,IAAYC,MAAMO,EAAU3B,SAASpB,QAAnDiD,EAFvB,EAEgBd,MAFhB,EAGqCI,IAAYC,MAAM/B,KAAKD,MAAMY,SAASpB,QAApDkD,EAHvB,EAGgBf,MACLc,IAAcC,EAJzB,gCAKmCT,IAAMC,IAAN,4DAA+DZ,EAA/D,kBAAgFoB,EAAhF,wCALnC,OAKkBP,EALlB,OAMYlC,KAAKN,SAAS,CAAEgB,OAAQwB,EAASC,KAAKC,UACL,IAA7BpC,KAAKV,MAAMoB,OAAOgC,QAClBC,IAAMpB,MAAM,iBAR5B,yDAaIvB,KAAKN,SAAS,CAAE6B,MAAM,EAAD,KAbzB,0D,6EAyBA,WACI,OACI,qCACG,cAAC,EAAD,CAAW1B,SAAUG,KAAKyB,oBACxBzB,KAAKV,MAAMoB,OAAOgC,OAAS,GAAK,cAAC,EAAD,CAAWhC,OAAQV,KAAKV,MAAMoB,OAAQpB,MAAO,CAAEsD,KAAM5C,KAAKD,MAAMY,YAChGX,KAAKV,MAAMiC,OAAS,6BAAKvB,KAAKV,MAAMiC,QACrC,cAAC,IAAD,CAAgBsB,UAAW,a,GApDlBrC,aAyDVc","file":"static/js/5.e2193bb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchBar_input__2txKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesPageContainer\":\"MovieList_moviesPageContainer__146kM\"};","import {Component, Route} from 'react';\r\n// import MoviesPage from '../MoviesPage/MoviesPage';\r\nimport s from './SearchBar.module.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        search: '',\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        this.setState({search: e.currentTarget.value})\r\n    }\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.search)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input className={s.input}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    value={this.state.search}\r\n                    onChange={this.onChange}\r\n                    placeholder='Search movies'\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <span>Search</span>\r\n                    </button>\r\n                </form>\r\n            </>\r\n        )\r\n}\r\n}\r\nexport default SearchBar;","import { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport s from './MovieList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieList = ({movies, location}) => {\r\n    return (\r\n        <>\r\n            <ul className={s.moviesPageContainer}>\r\n                {movies.map(movie => (\r\n                    <li key={movie.id}>\r\n                        <Link to={{ pathname: `/movies/${movie.id}`, state: location }} >\r\n                            {movie.title}\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nMovieList.defaultProps = {\r\n    title: '',\r\n    id: 0,\r\n    location: null\r\n};\r\n\r\nMovieList.propTypes = {\r\n    movie: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        id: PropTypes.number,\r\n    })\r\n};\r\n\r\nexport default withRouter(MovieList);","import {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport MovieList from '../MovieList/MovieList';\r\nimport { toast } from 'react-toastify';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport queryString from 'query-string';\r\n\r\nconst API_KEY = 'b2ac53e8621d02ada7802ecd2ad369f6';\r\n\r\nclass MoviesPage extends Component {\r\n    state = {\r\n        search: '',\r\n        movies: [],\r\n        error: null,\r\n        loading: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { query } = queryString.parse(this.props.location.search);\r\n            if (query) {\r\n                const response = await Axios.get(`https://api.themoviedb.org/3/movie/${query}?api_key=${API_KEY}&language=en-US`);\r\n                this.setState({ movies: response.data.results })\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.setState({ error: error.message })\r\n        }\r\n    };\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n       try{\r\n            const { query: prevQuery } = queryString.parse(prevProps.location.search);\r\n            const { query: nextQuery } = queryString.parse(this.props.location.search);\r\n            if(prevQuery !== nextQuery){\r\n                const response = await Axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${nextQuery}&language=en-US&include_adult=false`);\r\n                this.setState({ movies: response.data.results});\r\n                if (this.state.movies.length === 0) {\r\n                    toast.error('Nothing found');\r\n                }\r\n            }\r\n            \r\n       }catch (error){\r\n        this.setState({ error: error })\r\n       }\r\n    }\r\n\r\n    handleChangeQuery = query => {\r\n        this.setState({ search: query });\r\n        this.props.history.push({\r\n            ...this.props.location,\r\n            search: `query=${query}`\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n               <SearchBar onSubmit={this.handleChangeQuery} />\r\n                {this.state.movies.length > 0 && <MovieList movies={this.state.movies} state={{ from: this.props.location }} />}\r\n                {this.state.error && <h1>{this.state.error}</h1>}\r\n                <ToastContainer autoClose={2000}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default MoviesPage;"],"sourceRoot":""}